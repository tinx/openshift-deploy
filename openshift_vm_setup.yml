---
- name: Populate ansible hostvars
  hosts: all
  gather_facts: false
  tags:
    - always
  tasks: []

- name: Configure OpenStack project
  hosts: localhost
  tags:
    - configure_cloud
  tasks:
    - name: Set up Networks
      include_tasks: "tasks/task_setup_networks.yml"
    - name: Set up Security Groups
      include_tasks: "tasks/task_setup_security_groups.yml"
    - name: Set up VMs
      include_tasks: "tasks/task_setup_vms.yml"

- name: Update inventory
  hosts: localhost
  tags:
    - always
  tasks:
    - name: Inject IP addresses into inventory
      include_tasks: "tasks/task_update_inventory.yml"

- name: Configure VMs
  hosts: all
  gather_facts: true
  remote_user: centos
  become: true
  become_user: root
  tags:
    - configure_vms
  tasks:
    - name: Activate all interfaces
      template:
        src: templates/ifcfg.j2
        dest: '/etc/sysconfig/network-scripts/ifcfg-{{ item }}'
        mode: 0644
        owner: root
        group: root
        force: false
      when: hostvars[inventory_hostname]["ansible_"+item]["type"] == "ether"
      with_items:
        - '{{ hostvars[inventory_hostname]["ansible_interfaces"] }}'
      notify:
         - restart network
    - name: Make sure network changes are activated now
      meta: flush_handlers

  handlers:
    - name: restart network
      service:
        name: network
        state: restarted
      listen: 'restart network'

- name: Configure hidden primary DNS server
  hosts: dns_hidden_primary_hosts
  gather_facts: false
  remote_user: centos
  tags:
    - configure_dns
    - configure_primary_dns
  tasks:
    - name: Configure primary DNS server
      include_tasks: tasks/task_setup_primary_dns_server.yml

- name: Configure secondary DNS servers
  hosts: dns_hosts
  gather_facts: false
  remote_user: centos
  tags:
    - configure_dns
    - configure_secondary_dns
  tasks:
    - name: Configure primary DNS server
      include_tasks: tasks/task_setup_secondary_dns_servers.yml

- name: Configure all VMs to use our DNS servers
  hosts: all
  gather_facts: true
  remote_user: centos
  tags:
    - configure_dns
    - configure_dns_clients
  tasks:
    - name: get VM infos
      os_server_facts:
        cloud: '{{ cloud }}'
        endpoint_type: '{{ endpoint_type }}'
      delegate_to: localhost
      when: openstack_servers is not defined
    - name: add temporary DNS resolver
      lineinfile:
        path: /etc/resolv.conf
        line: "nameserver 8.8.8.8"
        state: present
        insertafter: '^search'
        regexp: '^nameserver 8.8.8.8$'
      become: true
      become_user: root
    - name: Prepare DNS server list
      set_fact:
        os_dns_servers: '{{ os_dns_servers|default([]) + [ openstack_servers|selectattr("name", "equalto", item)|map(attribute="addresses")|map(attribute=dns_network)|first|map(attribute="addr")|first ] }}'
      with_items: '{{ groups.dns_hosts }}'
    - name: Setup dnsmasq
      include_role:
        name:  dnsmasq
      vars:
        dnsmasq_resolvconf: true
        dnsmasq_host_domain: '{{ dns_default_domain }}'
        dnsmasq_host_search: '{{ dns_default_search }}'
        dnsmasq_host_resolvers: [ "127.0.0.1" ]
        dnsmasq_dhcp: false
        dnsmasq_tftp: false
        dnsmasq_conf_log: DAEMON
        dnsmasq_conf_listen: [ 127.0.0.1 ]
        dnsmasq_conf_bogus_priv: false
        dnsmasq_conf_no_hosts: true
        dnsmasq_conf_all_servers: true
        dnsmasq_conf_resolv:
        dnsmasq_conf_no_poll: true
        dnsmasq_conf_servers: '{{ os_dns_servers }}'
      become: true
      become_user: root
